{"ast":null,"code":"import _classCallCheck from \"C:/Users/cadav/Desktop/angular_project/wordular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/cadav/Desktop/angular_project/wordular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport Keyboard from \"simple-keyboard\";\nimport { ButtonControlService } from \"./button-control.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./button-control.service\";\nexport var KeyboardComponent = /*#__PURE__*/(function () {\n  var KeyboardComponent = /*#__PURE__*/function () {\n    function KeyboardComponent(buttonControlService) {\n      var _this = this;\n\n      _classCallCheck(this, KeyboardComponent);\n\n      this.buttonControlService = buttonControlService;\n      this.value = \"\";\n      this.CharStates = [];\n      this.tries = 0;\n\n      this.onChange = function (input) {\n        _this.value = input;\n      };\n\n      this.onKeyPress = function (button) {\n        if (!button.match(\"{enter}\")) {\n          _this.setButtonPressed(button.toLowerCase());\n        }\n\n        if (button.match(\"{enter}\")) {\n          _this.setButtonPressed(button.toLowerCase());\n\n          console.log('qui');\n        }\n      };\n\n      this.onInputChange = function (event) {\n        _this.keyboard.setInput(event.target.value);\n      };\n    }\n\n    _createClass(KeyboardComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this2 = this;\n\n        this.buttonControlService.getKeyBoardButton().subscribe(function (data) {\n          _this2.keybrdButtons = data; //console.log(this.CharStates.length)\n          //console.log(this.CharStates)\n          //console.log(this.keybrdButtons[0])\n          // console.log(this.CharStates.length)\n\n          var index = _this2.CharStates.findIndex(function (x) {\n            return x.char == data[0];\n          });\n\n          if (index === -1) {\n            _this2.CharStates.push({\n              char: data[0],\n              state: data[1]\n            });\n          } else {\n            if (_this2.CharStates[index].state === 0 && data[1] === 1) {\n              _this2.CharStates[index].state = 1;\n            }\n\n            if (_this2.CharStates[index].state === 0 && data[1] === 2) {\n              _this2.CharStates[index].state = 2;\n            }\n\n            if (_this2.CharStates[index].state === 1 && data[1] === 2) {\n              _this2.CharStates[index].state = 2;\n            }\n          }\n\n          _this2.CharStates.forEach(function (x) {\n            if (x.state === 0) {\n              _this2.keyboard.addButtonTheme(x.char.toUpperCase(), \"Wrong\");\n            }\n\n            ;\n\n            if (x.state === 1) {\n              _this2.keyboard.removeButtonTheme(x.char.toUpperCase(), \"Wrong\"), _this2.keyboard.addButtonTheme(x.char.toUpperCase(), \"Partial\");\n            }\n\n            ;\n\n            if (x.state === 2) {\n              _this2.keyboard.removeButtonTheme(x.char.toUpperCase(), \"Wrong\"), _this2.keyboard.removeButtonTheme(x.char.toUpperCase(), \"Partial\"), _this2.keyboard.addButtonTheme(x.char.toUpperCase(), \"Full\");\n            }\n          });\n        });\n      }\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        var _this3 = this;\n\n        this.keyboard = new Keyboard({\n          onChange: function onChange(input) {\n            return _this3.onChange(input);\n          },\n          onKeyPress: function onKeyPress(button) {\n            return _this3.onKeyPress(button);\n          },\n          theme: \"hg-theme-default hg-layout-default myTheme\",\n          layout: {\n            default: [\"Q W E R T Y U I O P\", \"A S D F G H J K L\", \"{enter} Z X C V B N M {bksp}\"]\n          },\n          display: {\n            '{enter}': 'ENTER',\n            \"{bksp}\": \"⌫\"\n          },\n          inputName: \"input1\",\n          maxLength: {\n            input1: 5\n          },\n          buttonTheme: [{\n            class: \"Wrong\",\n            buttons: \" \"\n          }, {\n            class: \"Partial\",\n            buttons: \" \"\n          }, {\n            class: \"Full\",\n            buttons: \" \"\n          }]\n        });\n      }\n    }, {\n      key: \"setButtonPressed\",\n      value: function setButtonPressed(button) {\n        this.buttonControlService.setButton(button);\n      }\n    }, {\n      key: \"getKeyBoardButtons\",\n      value: function getKeyBoardButtons() {\n        this.buttonControlService.getKeyBoardButton();\n      }\n    }]);\n\n    return KeyboardComponent;\n  }();\n\n  KeyboardComponent.ɵfac = function KeyboardComponent_Factory(t) {\n    return new (t || KeyboardComponent)(i0.ɵɵdirectiveInject(i1.ButtonControlService));\n  };\n\n  KeyboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: KeyboardComponent,\n    selectors: [[\"word-keyboard\"]],\n    decls: 1,\n    vars: 0,\n    consts: [[1, \"simple-keyboard\"]],\n    template: function KeyboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n      }\n    },\n    styles: [\".simple-keyboard{margin-top:50px;background-color:transparent;margin-left:auto;margin-right:auto;left:0;right:0;text-align:center;max-width:500px;position:fixed;bottom:0;width:100%;z-index:1}.simple-keyboard .hg-row:nth-child(2){margin-left:18px;margin-right:18px}.simple-keyboard .hg-button{background-color:#d3d6da;font-weight:700;height:58px;margin:0 6px 0 0;border-radius:4px}.simple-keyboard .hg-button .hg-button-bksp{font-size:50px}.simple-keyboard.hg-layout-default .hg-button.Full{background:#6aaa64;color:#fff}.simple-keyboard.hg-layout-default .hg-button.Partial{background:#c9b458;color:#fff}.simple-keyboard.hg-layout-default .hg-button.Wrong{background:#3a3a3c;color:#fff}\\n\"],\n    encapsulation: 2\n  });\n  return KeyboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}